<Window x:Class="REA.Views.AuthorizationWindow" x:Name="StartUpWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewModel="clr-namespace:REA.ViewModels"
        xmlns:passwordHelper="clr-namespace:REA.Views"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="Real Estate Agency" Height="415" Width="715"
        WindowStyle="None" WindowStartupLocation="CenterScreen"
        AllowsTransparency="true" Background="Transparent"
        ResizeMode="NoResize" Icon="{StaticResource AppIcon}">

    <Window.DataContext>
        <viewModel:AuthorizationWindowVM/>
    </Window.DataContext>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" Executed="OnCloseWindow" />
    </Window.CommandBindings>

    <Window.Effect>
        <DropShadowEffect BlurRadius="10"/>
    </Window.Effect>

    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource bgScale}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="loginButton">
            <BeginStoryboard Storyboard="{StaticResource LoginClick}"/>
            <BeginStoryboard Storyboard="{StaticResource RegisterClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="registerButton">
            <BeginStoryboard Storyboard="{StaticResource RegisterClick}"/>
            <BeginStoryboard Storyboard="{StaticResource LoginClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="CloseLoginPanel">
            <BeginStoryboard Storyboard="{StaticResource LoginClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="CloseRegisterPanel">
            <BeginStoryboard Storyboard="{StaticResource RegisterClose}"/>
        </EventTrigger>
    </Window.Triggers>

    <Grid Height="350" Width="700">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="28*"/>
            <ColumnDefinition Width="142*"/>
            <ColumnDefinition Width="28*"/>
            <ColumnDefinition Width="28*"/>
            <ColumnDefinition Width="142*"/>
            <ColumnDefinition Width="28*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="23*"/>
            <RowDefinition Height="54*"/>
            <RowDefinition Height="23*"/>
        </Grid.RowDefinitions>
        
        <Image x:Name="bgImg" Width="700"
               Grid.ColumnSpan="6" Grid.RowSpan="3"
               HorizontalAlignment="Center" VerticalAlignment="Center"
               Source="{StaticResource BgImg}"
               Stretch="UniformToFill"
               Style="{StaticResource GrayscaleEffect}"/>
        
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Rectangle Grid.Row="0" Grid.RowSpan="3" RadiusX="3" RadiusY="3">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{StaticResource BlackColor}" Opacity="0.4"/>
                </Rectangle.Fill>
            </Rectangle>
            <Label Grid.Row="0" FontSize="20"
                   Style="{StaticResource White}"
                   Content="{DynamicResource _Input}"/>
            <Label Grid.Row="1" FontSize="16"
                   Style="{StaticResource White}"
                   Content="{DynamicResource _HaveAccount}"/>
            <Button x:Name="loginButton" Grid.Row="2" 
                    Background="#FF2196F3" BorderBrush="#FF2196F3"
                    Width="100" Height="32"
                    Foreground="{StaticResource WhiteBrush}"
                    Content="{DynamicResource _SignIn}"
                    Command="{Binding ClearDataCommand}"/>
        </Grid>
        
        <Grid Grid.Column="4" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Rectangle Grid.Row="0" Grid.RowSpan="3" 
                       RadiusX="3" RadiusY="3">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{StaticResource BlackColor}" Opacity="0.4"/>
                </Rectangle.Fill>
            </Rectangle>
            <Label Grid.Row="0" FontSize="20" 
                   Style="{StaticResource White}"
                   Content="{DynamicResource _Registration}"/>
            <Label Grid.Row="1" FontSize="16"
                   Style="{StaticResource White}"
                   Content="{DynamicResource _HaventAccount}"/>
            <Button x:Name="registerButton" Grid.Row="2"
                    Width="170" Height="32"
                    Foreground="{StaticResource WhiteBrush}"
                    Background="#FFD50000" BorderBrush="#FFD50000"
                    Content="{DynamicResource _SignUp}"
                    Command="{Binding ClearDataCommand}"/>
        </Grid>

        <Grid x:Name="loginPanel" Grid.ColumnSpan="3" Grid.RowSpan="3"            
              Height="350" Width="350" 
              Visibility="Hidden" Background="Transparent"
              RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <StackPanel x:Name="loginStackPanel" RenderTransformOrigin="0.5,0.5">
                <StackPanel.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </StackPanel.RenderTransform>
                <Button x:Name="CloseLoginPanel" 
                        Height="20" Width="20" 
                        HorizontalAlignment="Left" Margin="5,0"
                        Style="{StaticResource ButtonStyle}"
                        Command="{Binding ClearDataCommand}">
                    <Image Source="{StaticResource ArrowLeft}"/>
                </Button>
                <Label Content="{DynamicResource _Input}" FontSize="20"
                       HorizontalAlignment="Center" Margin="0,30,0,0"/>
                <TextBox Margin="20,10,20,0"
                         materialDesign:HintAssist.Hint="E-mail"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         Text="{Binding Employee.Email, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <cmd:EventToCommand Command="{Binding OnDataChangedCommand, Mode=OneWay}"
                            PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <PasswordBox Margin="20,20,20,0"
                             materialDesign:HintAssist.Hint="{DynamicResource _Password}" 
                             Style="{StaticResource MaterialDesignFloatingHintPasswordBox}"
                             materialDesign:HintAssist.Foreground="#FF9E9E9E"
                             passwordHelper:PasswordHelper.Attach="True"
                             passwordHelper:PasswordHelper.Password="{Binding Employee.HashPassword, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PasswordChanged">
                            <cmd:EventToCommand Command="{Binding OnDataChangedCommand, Mode=OneWay}"
                            PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </PasswordBox>
                <Button Margin="0,70,0,0"
                        Width="100" Height="32"
                        Background="#FF2196F3" BorderBrush="#FF2196F3"
                        Foreground="{StaticResource WhiteBrush}"
                        Content="{DynamicResource _SignIn}"
                        Command="{Binding LoginEmployeeCommand}"/>
            </StackPanel>
        </Grid>

        <Grid x:Name="registerPanel" Grid.Column="3" Grid.ColumnSpan="3" Grid.RowSpan="3"
              Height="350" Width="350"
              Visibility="Hidden" Background="Transparent"
              RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Visible">
                <StackPanel x:Name="registerStackPanel"
                            Width="350"
                            RenderTransformOrigin="0.5,0.5">
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <Button x:Name="CloseRegisterPanel" 
                            Height="20" Width="20" 
                            HorizontalAlignment="Left" Margin="5,0"
                            Style="{StaticResource ButtonStyle}"
                            Command="{Binding ClearDataCommand}">
                        <Image Source="{StaticResource ArrowLeft}"/>
                    </Button>
                    <Label Content="{DynamicResource _Registration}"
                           FontSize="20"
                           HorizontalAlignment="Center"/>
                    <TextBox Margin="20,10,15,0"
                             materialDesign:HintAssist.Hint="{DynamicResource _Surname}"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding Employee.Surname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <cmd:EventToCommand Command="{Binding OnDataChangedCommand, Mode=OneWay}"
                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Margin="20,20,15,0"
                             materialDesign:HintAssist.Hint="{DynamicResource _Name}"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding Employee.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <cmd:EventToCommand Command="{Binding OnDataChangedCommand, Mode=OneWay}"
                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Margin="20,20,15,0"
                             materialDesign:HintAssist.Hint="{DynamicResource _Patronymic}"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding Employee.Patronymic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <cmd:EventToCommand Command="{Binding OnDataChangedCommand, Mode=OneWay}"
                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Margin="20,20,15,0"
                             materialDesign:HintAssist.Hint="E-mail"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding Employee.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <cmd:EventToCommand Command="{Binding OnDataChangedCommand, Mode=OneWay}"
                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <PasswordBox Margin="20,20,15,0"
                                 materialDesign:HintAssist.Hint="{DynamicResource _Password}"
                                 materialDesign:HintAssist.Foreground="#FF9E9E9E"
                                 Style="{StaticResource MaterialDesignFloatingHintPasswordBox}"
                                 passwordHelper:PasswordHelper.Attach="True"
                                 passwordHelper:PasswordHelper.Password="{Binding Employee.HashPassword, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PasswordChanged">
                                <cmd:EventToCommand Command="{Binding OnDataChangedCommand, Mode=OneWay}"
                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </PasswordBox>
                    <PasswordBox Margin="20,20,15,0"
                                 materialDesign:HintAssist.Hint="{DynamicResource _RepeatPassword}"
                                 materialDesign:HintAssist.Foreground="#FF9E9E9E"
                                 Style="{StaticResource MaterialDesignFloatingHintPasswordBox}"
                                 passwordHelper:PasswordHelper.Attach="True"
                                 passwordHelper:PasswordHelper.Password="{Binding RepeatPassword, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PasswordChanged">
                                <cmd:EventToCommand Command="{Binding OnDataChangedCommand, Mode=OneWay}"
                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </PasswordBox>
                    <Button Margin="0,30,0,0"
                            Width="170" Height="32"
                            Background="#FFD50000" BorderBrush="#FFD50000"
                            Foreground="{StaticResource WhiteBrush}"
                            Content="{DynamicResource _SignUp}"
                            Command="{Binding RegisterEmployeeCommand}"/>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <ListBox x:Name="langList"
                 Style="{StaticResource MaterialDesignToolToggleListBox}"
                 SelectedIndex="0" Background="Transparent"
                 BorderThickness="0" Effect="{x:Null}"
                 Foreground="{StaticResource WhiteBrush}"
                 ItemsSource="{Binding Languages}"
                 SelectedValue="{Binding Language, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.ColumnSpan="2">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <cmd:EventToCommand Command="{Binding ChangeLanguageCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>

        <Button Grid.Column="5" 
                HorizontalAlignment="Right" VerticalAlignment="Top"
                Height="20" Width="20" 
                Style="{DynamicResource ControlWindowButtons}"
                Command="{x:Static SystemCommands.CloseWindowCommand}">
            <Image Source="{StaticResource WhiteClose}"/>
        </Button>
    </Grid>
</Window>
